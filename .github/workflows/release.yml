name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: '发布版本号'
        required: true
        default: 'v1.0.0'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 登录到GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 获取版本号
      id: version
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          VERSION=${{ github.event.release.tag_name }}
        else
          VERSION=${{ github.event.inputs.version }}
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "发布版本: ${VERSION}"

    - name: 构建并推送发布版Docker镜像
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:stable
        labels: |
          org.opencontainers.image.title=WebFluid
          org.opencontainers.image.description=流体模拟Web应用
          org.opencontainers.image.version=${{ steps.version.outputs.version }}
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: 生成发布说明
      run: |
        echo "## 🚀 发布 ${{ steps.version.outputs.version }}" >> release_notes.md
        echo "" >> release_notes.md
        echo "### Docker镜像" >> release_notes.md
        echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}\`" >> release_notes.md
        echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:stable\`" >> release_notes.md
        echo "" >> release_notes.md
        echo "### 使用方法" >> release_notes.md
        echo "\`\`\`bash" >> release_notes.md
        echo "docker run -p 8080:80 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}" >> release_notes.md
        echo "\`\`\`" >> release_notes.md
        echo "" >> release_notes.md
        echo "### 在线演示" >> release_notes.md
        echo "🌐 [GitHub Pages](${{ github.server_url }}/${{ github.repository }}/pages)" >> release_notes.md

    - name: 上传发布说明
      uses: actions/upload-artifact@v4
      with:
        name: release-notes
        path: release_notes.md 